name: CI Pipeline - Video Player Automation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  video_player_ci_tests:
    runs-on: ubuntu-latest
    outputs:
      test_exit_code: ${{ steps.test_step.outputs.exit_code }}
    steps:
      - name: ⬇️ Checkout Repository
        uses: actions/checkout@v4

      - name: 🧰 Install Docker, Docker Compose & Make
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose make

      - name: 🚀 Start Backend Server
        run: make up_server

      - name: 🛠️ Build Playwright Test Image
        run: make build

      - name: 🧪 Run Tests
        id: test_step
        run: |
          set +e
          make test
          echo $? > test-exit-code.txt
          exit_code=$(cat test-exit-code.txt)
          echo "exit_code=$exit_code" >> $GITHUB_OUTPUT

      - name: 📤 Generate + Upload HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 1

      - name: 🔴 Fail CI if tests failed
        if: always()
        run: |
          if [ "${{ steps.test_step.outputs.exit_code }}" -ne 0 ]; then
            echo "Tests failed. Failing the job."
            exit 1
          fi

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Install Node Modules
        run: npm install

      - name: 📝 Run ESLint
        run: npx eslint .

      - name: 🎨 Run Prettier Check
        run: npx prettier --check .

  pr_comment:
    runs-on: ubuntu-latest
    needs: video_player_ci_tests
    if: ${{ github.event_name == 'pull_request' && !cancelled() }}
    steps:
      - name: ⬇️ Checkout Repository
        uses: actions/checkout@v4

      - name: 📥 Download Test Report Artifact
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      - name: 💬 Post PR Comment with Test Summary
        uses: dorny/test-reporter@v1
        with:
          name: Tests Summary
          path: playwright-report/results.xml
          reporter: java-junit
          fail-on-error: false


  report:
    runs-on: ubuntu-latest
    needs: video_player_ci_tests
    if: ${{ !cancelled() }}
    steps:
      - name: ⬇️ Download Playwright report artifact
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

      - name: 🚀 Deploy Playwright Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./playwright-report

      - name: 🔗 GitHub Pages URL
        run: |
          echo "✅ Report: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
